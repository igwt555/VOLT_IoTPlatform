name: CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches: 
      - 'master'
  pull_request:
    branches: [ master ]

jobs:
  pg-container:
    name: Boot Containerized Postgres DB
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image: node:16.17.0
      options: --user root # for nyc.js to write code coverage
    strategy:
      matrix:
        node-version: [16.x]
    
    services:
      postgres:
        image: postgres:13.9
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: volt
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client
      # - name: Install PG UUID extension
      #   run: psql -d postgres://postgres:postgres@postgres:5432/volt -c 'CREATE EXTENSION pgcrypto;'
      - name: Import DB schema
        run: psql -d postgres://postgres:postgres@postgres:5432/volt -f ./db/db.schema.sql
      # # - name: Setup DB schema
      # #   run: npm run --prefix ./packages/api db:create
      # #   env:
      # #     DATABASE_URL: postgres://postgres:postgres@postgres:5432/volt
      # #     DATABASE_PASSWORD: postgres
      # #     DATABASE_USERNAME: postgres
      # #     DATABASE_HOSTNAME: postgres
      # #     DATABASE_PORT: 5432
      # #     DATABASE_NAME: volt
      # #     DATABASE_SSL: false
      - name: Install dependencies
        run: npm ci
      - name: Lint API package
        uses: sibiraj-s/action-eslint@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Optional
          eslint-args: '--config ./packages/api/.eslintrc.js --ignore-path=.gitignore --quiet'
          extensions: 'js,mjs'
          annotations: true
      - name: Lint UI package
        uses: sibiraj-s/action-eslint@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Optional
          eslint-args: '--config ./packages/ui/.eslintrc.js --ignore-path=.gitignore --quiet'
          extensions: 'js,mjs,jsx,ts,tsx,vue'
          annotations: true
      - name: Run all test cases
        run: npm run test:api
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/volt
          DATABASE_PASSWORD: postgres
          DATABASE_USERNAME: postgres
          DATABASE_HOSTNAME: postgres
          DATABASE_PORT: 5432
          DATABASE_NAME: volt
          DATABASE_SSL: false
          AIRBRAKE_PROJECT_ID: ${{ secrets.AIRBRAKE_PROJECT_ID }}
          AIRBRAKE_PROJECT_KEY: ${{ secrets.AIRBRAKE_PROJECT_KEY}}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID}}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN}}
          JWT_SECRET_KEY: CI_JWT_KEY
      - name: Generate NYC report
        run: |
          npx nyc report \
            --reporter json-summary \
            --report-dir nyc-coverage-report \
            --exclude-after-remap false

      - name: Report NYC coverage
        uses: sidx1024/report-nyc-coverage-github-action@v1.1
        with:
          # Path to coverage file generated by "nyc report".
          coverage_file: "nyc-coverage-report/coverage-summary.json"

      # # - run: npm run build --if-present
      # # - run: npm test
      # #- run: npm run build --if-present
      # #- run: npm run test
      # #  env:
      # #    NODE_ENV: test
      # #    AIRBRAKE_PROJECT_ID: 456758
      # #    AIRBRAKE_PROJECT_KEY: e867941fb67e814f9c159c90db997d81
      # #    TWILIO_ACCOUNT_SID: AC2d1ed367f376eda8265873443d921234
      # #    TWILIO_AUTH_TOKEN: b7c99cd1325c714acddbe4997e812345
      # # - run: npm run teste2e
      # #   env:
      # #     TWILIO_ACCOUNT_SID: AC2d1ed367f376eda8265873443d921234
      # #     TWILIO_AUTH_TOKEN: b7c99cd1325c714acddbe4997e812345
      # # - run: npm run e2eheadless
